language: cpp
os:
  - linux
  - osx
compiler:
  - gcc
  - clang
matrix:
  exclude:
    - os: osx
      compiler: gcc # Don't do a gcc build on OSX
cache: apt
install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ] ; then
      sudo add-apt-repository --yes ppa:kalakris/cmake # For cmake 2.8.9+
      sudo add-apt-repository --yes ppa:beineri/opt-qt521 # For Qt 5.2.1
      sudo add-apt-repository --yes ppa:boost-latest/ppa # Updated Boost
      sudo add-apt-repository --yes ppa:ubuntu-toolchain-r/test # gcc 4.8
      sudo apt-get update -yqq
      sudo apt-get install -yqq cmake qt52base libboost1.55-dev libboost-date-time1.55-dev libboost-iostreams1.55-dev libboost-program-options1.55-dev libasound2-dev g++-4.8
      sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 90
      sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 90
      sudo pip install cpp-coveralls pyyaml # code coverage
    elif [ "$TRAVIS_OS_NAME" == "osx" ] ; then
      brew update
      brew install cmake
      brew install qt5
      brew install boost
    fi
script:
  - if [ "$TRAVIS_OS_NAME" == "linux" ] ; then
      cmake -DCMAKE_PREFIX_PATH=/opt/qt52/lib/cmake -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE=ON .
    else
      cmake -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_BUILD_TYPE=Debug .
    fi
  - cmake -DCMAKE_PREFIX_PATH=/opt/qt52/lib/cmake -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE=ON .
  - make -j4
  # Exclude any tests that are expected to fail.
  - ./bin/pte_tests exclude:Formats/PowerTabOldImport/Directions
after_success:
  - if [ "$TRAVIS_OS_NAME" == "linux" ] ; then coveralls --gcov gcov-4.8 --root . --build-root . --exclude CMakeFiles --exclude-pattern ".*_automoc\.cpp" --exclude-pattern ".*\.moc" --exclude-pattern "/usr/.*" --exclude-pattern ".*moc_.*" --exclude-pattern ".*ui_.*" --exclude-pattern ".*qrc_.*" --exclude-pattern ".*_prefix.*" --exclude-pattern ".*_unity.*" --exclude external | grep -vP "^File '.*'$" | grep -vP "^Creating '.*'$" | grep -vP "^Lines executed:.*" | sed '/^$/d' ; fi
